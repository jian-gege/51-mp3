C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE oled.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          
   2          //              GND    电源地
   3          //              VCC  接5V或3.3v电源
   4          //              D0   P1^0（SCL）
   5          //              D1   P1^1（SDA）
   6          //              RES  接P12
   7          //              DC   接P13
   8          //              CS   接P14               
   9          //              ----------------------------------------------------------------
  10          #include "oled.h"
  11          //#include "stdlib.h"
  12          #include "oledfont.h"    
  13          //#include "delay.h"
  14          //OLED的显存
  15          //存放格式如下.
  16          //[0]0 1 2 3 ... 127  
  17          //[1]0 1 2 3 ... 127  
  18          //[2]0 1 2 3 ... 127  
  19          //[3]0 1 2 3 ... 127  
  20          //[4]0 1 2 3 ... 127  
  21          //[5]0 1 2 3 ... 127  
  22          //[6]0 1 2 3 ... 127  
  23          //[7]0 1 2 3 ... 127         
  24          void delay_ms(unsigned int ms)
  25          {                         
  26   1        unsigned int a;
  27   1        while(ms)
  28   1        {
  29   2          a=1800;
  30   2          while(a--);
  31   2          ms--;
  32   2        }
  33   1        return;
  34   1      }
  35          /**********************************************
  36          //IIC Start
  37          **********************************************/
  38          void IIC_Start()
  39          {
  40   1      
  41   1        OLED_SCLK_Set() ;
  42   1        OLED_SDIN_Set();
  43   1        OLED_SDIN_Clr();
  44   1        OLED_SCLK_Clr();
  45   1      }
  46          
  47          /**********************************************
  48          //IIC Stop
  49          **********************************************/
  50          void IIC_Stop()
  51          {
  52   1      OLED_SCLK_Set() ;
  53   1      //  OLED_SCLK_Clr();
  54   1        OLED_SDIN_Clr();
C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 2   

  55   1        OLED_SDIN_Set();
  56   1        
  57   1      }
  58          
  59          void IIC_Wait_Ack()
  60          {
  61   1      
  62   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  63   1        //GPIOB->CRH |= 0x00080000;
  64   1      //  OLED_SDA = 1;
  65   1      //  delay_us(1);
  66   1        //OLED_SCL = 1;
  67   1        //delay_us(50000);
  68   1      /*  while(1)
  69   1        {
  70   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  71   1          {
  72   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  73   1            //GPIOB->CRH |= 0x00030000;
  74   1            return;
  75   1          }
  76   1        }
  77   1      */
  78   1        OLED_SCLK_Set() ;
  79   1        OLED_SCLK_Clr();
  80   1      }
  81          /**********************************************
  82          // IIC Write byte
  83          **********************************************/
  84          
  85          void Write_IIC_Byte(unsigned char IIC_Byte)
  86          {
  87   1        unsigned char i;
  88   1        unsigned char m,da;
  89   1        da=IIC_Byte;
  90   1        OLED_SCLK_Clr();
  91   1        for(i=0;i<8;i++)    
  92   1        {
  93   2            m=da;
  94   2          //  OLED_SCLK_Clr();
  95   2          m=m&0x80;
  96   2          if(m==0x80)
  97   2          {OLED_SDIN_Set();}
  98   2          else OLED_SDIN_Clr();
  99   2            da=da<<1;
 100   2          OLED_SCLK_Set();
 101   2          OLED_SCLK_Clr();
 102   2          }
 103   1      
 104   1      
 105   1      }
 106          /**********************************************
 107          // IIC Write Command
 108          **********************************************/
 109          void Write_IIC_Command(unsigned char IIC_Command)
 110          {
 111   1         IIC_Start();
 112   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 113   1        IIC_Wait_Ack(); 
 114   1         Write_IIC_Byte(0x00);      //write command
 115   1        IIC_Wait_Ack(); 
 116   1         Write_IIC_Byte(IIC_Command); 
C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 3   

 117   1        IIC_Wait_Ack(); 
 118   1         IIC_Stop();
 119   1      }
 120          /**********************************************
 121          // IIC Write Data
 122          **********************************************/
 123          void Write_IIC_Data(unsigned char IIC_Data)
 124          {
 125   1         IIC_Start();
 126   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 127   1        IIC_Wait_Ack(); 
 128   1         Write_IIC_Byte(0x40);      //write data
 129   1        IIC_Wait_Ack(); 
 130   1         Write_IIC_Byte(IIC_Data);
 131   1        IIC_Wait_Ack(); 
 132   1         IIC_Stop();
 133   1      }
 134          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 135          {
 136   1        if(cmd)
 137   1            {
 138   2      
 139   2         Write_IIC_Data(dat);
 140   2         
 141   2          }
 142   1        else {
 143   2         Write_IIC_Command(dat);
 144   2          
 145   2        }
 146   1      
 147   1      
 148   1      }
 149          
 150          /********************************************
 151          // fill_Picture
 152          ********************************************/
 153          void fill_picture(unsigned char fill_Data)
 154          {
 155   1        unsigned char m,n;
 156   1        for(m=0;m<8;m++)
 157   1        {
 158   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 159   2          OLED_WR_Byte(0x00,0);   //low column start address
 160   2          OLED_WR_Byte(0x10,0);   //high column start address
 161   2          for(n=0;n<128;n++)
 162   2            {
 163   3              OLED_WR_Byte(fill_Data,1);
 164   3            }
 165   2        }
 166   1      }
 167          
 168          
 169          /***********************Delay****************************************/
 170          void Delay_50ms(unsigned int Del_50ms)
 171          {
 172   1        unsigned int m;
 173   1        for(;Del_50ms>0;Del_50ms--)
 174   1          for(m=6245;m>0;m--);
 175   1      }
 176          
 177          void Delay_1ms(unsigned int Del_1ms)
 178          {
C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 4   

 179   1        unsigned char j;
 180   1        while(Del_1ms--)
 181   1        { 
 182   2          for(j=0;j<123;j++);
 183   2        }
 184   1      }
 185          
 186          //坐标设置
 187          
 188            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 189          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 190   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 191   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 192   1      }       
 193          //开启OLED显示    
 194          void OLED_Display_On(void)
 195          {
 196   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 197   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 198   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 199   1      }
 200          //关闭OLED显示     
 201          void OLED_Display_Off(void)
 202          {
 203   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 204   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 205   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 206   1      }            
 207          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 208          void OLED_Clear(void)  
 209          {  
 210   1        u8 i,n;       
 211   1        for(i=0;i<8;i++)  
 212   1        {  
 213   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 214   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 215   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 216   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 217   2        } //更新显示
 218   1      }
 219          void OLED_Clear_12(void)  
 220          {  
 221   1        u8 i,n;       
 222   1        for(i=0;i<2;i++)  
 223   1        {  
 224   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 225   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 226   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 227   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 228   2        } //更新显示
 229   1      }
 230          void OLED_On(void)  
 231          {  
 232   1        u8 i,n;       
 233   1        for(i=0;i<8;i++)  
 234   1        {  
 235   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 236   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 237   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 238   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 239   2        } //更新显示
 240   1      }
C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 5   

 241          //在指定位置显示一个字符,包括部分字符
 242          //x:0~127
 243          //y:0~63
 244          //mode:0,反白显示;1,正常显示         
 245          //size:选择字体 16/12 
 246          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 247          {       
 248   1        unsigned char c=0,i=0;  
 249   1          c=chr-' ';//得到偏移后的值      
 250   1          if(x>Max_Column-1){x=0;y=y+2;}
 251   1          if(Char_Size ==16)
 252   1            {
 253   2            OLED_Set_Pos(x,y);  
 254   2            for(i=0;i<8;i++)
 255   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 256   2            OLED_Set_Pos(x,y+1);
 257   2            for(i=0;i<8;i++)
 258   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 259   2            }
 260   1            else {  
 261   2              OLED_Set_Pos(x,y);
 262   2              for(i=0;i<6;i++)
 263   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 264   2              
 265   2            }
 266   1      }
 267          //m^n函数
 268          u32 oled_pow(u8 m,u8 n)
 269          {
 270   1        u32 result=1;  
 271   1        while(n--)result*=m;    
 272   1        return result;
 273   1      }         
 274          //显示2个数字
 275          //x,y :起点坐标  
 276          //len :数字的位数
 277          //size:字体大小
 278          //mode:模式 0,填充模式;1,叠加模式
 279          //num:数值(0~4294967295);       
 280          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 281          {           
 282   1        u8 t,temp;
 283   1        u8 enshow=0;               
 284   1        for(t=0;t<len;t++)
 285   1        {
 286   2          temp=(num/oled_pow(10,len-t-1))%10;
 287   2          if(enshow==0&&t<(len-1))
 288   2          {
 289   3            if(temp==0)
 290   3            {
 291   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 292   4              continue;
 293   4            }else enshow=1; 
 294   3             
 295   3          }
 296   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 297   2        }
 298   1      } 
 299          //显示一个字符号串
 300          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 301          {
 302   1        unsigned char j=0;
C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 6   

 303   1        while (chr[j]!='\0')
 304   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 305   2            x+=8;
 306   2          if(x>120){x=0;y+=2;}
 307   2            j++;
 308   2        }
 309   1      }
 310          //显示汉字
 311          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 312          {               
 313   1        u8 t,adder=0;
 314   1        OLED_Set_Pos(x,y);  
 315   1          for(t=0;t<16;t++)
 316   1          {
 317   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 318   2              adder+=1;
 319   2           }  
 320   1          OLED_Set_Pos(x,y+1);  
 321   1          for(t=0;t<16;t++)
 322   1            { 
 323   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 324   2              adder+=1;
 325   2            }         
 326   1      }
 327          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 328          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 329          {   
 330   1       unsigned int j=0;
 331   1       unsigned char x,y;
 332   1        
 333   1        if(y1%8==0) y=y1/8;      
 334   1        else y=y1/8+1;
 335   1        for(y=y0;y<y1;y++)
 336   1        {
 337   2          OLED_Set_Pos(x0,y);
 338   2          for(x=x0;x<x1;x++)
 339   2            {      
 340   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 341   3            }
 342   2        }
 343   1      } 
 344          
 345          //初始化SSD1306             
 346          void OLED_Init(void)
 347          {   
 348   1       
 349   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 350   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 351   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 352   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 353   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 354   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 355   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 356   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 357   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 358   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 359   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 360   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 361   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 362   1        OLED_WR_Byte(0x00,OLED_CMD);//
C51 COMPILER V9.60.0.0   OLED                                                              06/16/2023 01:03:55 PAGE 7   

 363   1        
 364   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 365   1        OLED_WR_Byte(0x80,OLED_CMD);//
 366   1        
 367   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 368   1        OLED_WR_Byte(0x05,OLED_CMD);//
 369   1        
 370   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 371   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 372   1        
 373   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 374   1        OLED_WR_Byte(0x12,OLED_CMD);//
 375   1        
 376   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 377   1        OLED_WR_Byte(0x30,OLED_CMD);//
 378   1        
 379   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 380   1        OLED_WR_Byte(0x14,OLED_CMD);//
 381   1        
 382   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 383   1      }  
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          
 393          
 394          
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          
 404          
 405          
 406          
 407          
 408          
 409          
 410          
 411          
 412          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1637    ----
   CONSTANT SIZE    =   2968    ----
   XDATA SIZE       =   ----      42
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
